# -*- coding: utf-8 -*-
"""Revit Clash Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pn4GipooKEj82j16xM9cLfxQMEx4UCpL

Visualisation d'un **fichier HTML** du **drive**
"""

import IPython
from google.colab import drive
drive.mount('/drive')
IPython.display.HTML(filename='/drive/My Drive/Colab Notebooks/Vestack-MAQUETTE-MEP Venansault v2 - Copie.html')

"""**Import du module BeautifulSoup**

C'est une librairie permettant de traiter des données extraites d'un fichier HTML et/ou XML
"""

from bs4 import BeautifulSoup

"""Import d'un **fichier HTML** du **drive**"""

with open("/drive/My Drive/Colab Notebooks/Vestack-MAQUETTE-MEP Venansault v2 - Copie.html") as fp:
    soup = BeautifulSoup(fp, "html.parser")

"""Suppression de l'en-tête du fichier pour conserver que les clashs"""

import re
soup2=soup.find_all("td")
clashs = []
i=0
for elem in soup2 :
  if i>=3 :
    #s = "abc123AUG|GAC|UGAasdfg789"
    #print(type(elem))
    clashs.append(str(elem))
  i+=1
clashs

"""Isoler les clashs dans des listes différentes [clash = élément MEP + élément ossature avec leurs identifiants]"""

table = []
i=0
for elem in clashs :
  clashs_mod = elem.split('<td>')
  i+=1
  clash_final=clashs_mod[1].split('</td>')
  table.append(clash_final[0])
j=1
table2,table3,table4= [],[],[]
for elem in table :
  #table2.append(j)
  if j%3 != 0 :
    clash_final2=table[j].split(': ID')
    table2.append(clash_final2)
  j+=1

k=1
for elem in table2 :
  for elem2 in elem :
    table3.append(elem2)
    if k%4 ==0:
      table4.append(table3)
      table3=[]
    k+=1
table4

"""Préparer une fonction qui récupère les propriétés de chaque élément"""

#Transformer une liste de chaines de caractère en un tableau de chaines
def transform(liste) :
  liste3,liste4=[],[]
  for elem in liste :
      liste2 = elem.split(':')
      liste3.append(liste2)
      liste2=[]
  for elem in liste3 :
    for elem2 in elem:
      liste4.append(elem2)
  return liste4

table5 = []
for elem in table4 :
  table5.append(transform(elem))
table5

"""Présenter le résultat de clashs sous un tableau de la bibliothèque Pandas"""

import pandas as pd
import math as mt
df = pd.DataFrame(data = table5, columns = ['  Catégorie Revit ',' Type Revit ',' Element MEP ',' Id MEP  ',' Projet Lien ',' Structure ',' Element Structure ',
  ' Dimensions Element ',
  ' Id Structure  '])
df

"""Télécharger le tableau en format .xlsx"""

import pandas as pd
writer = pd.ExcelWriter('TableauDeDetectionClashs.xlsx')
df.to_excel(writer, index = False)
writer.save()
files.download('TableauDeDetectionClashs.xlsx')

